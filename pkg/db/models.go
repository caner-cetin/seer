// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type LanguageType string

const (
	LanguageTypeData        LanguageType = "data"
	LanguageTypeProgramming LanguageType = "programming"
	LanguageTypeMarkup      LanguageType = "markup"
	LanguageTypeProse       LanguageType = "prose"
)

func (e *LanguageType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = LanguageType(s)
	case string:
		*e = LanguageType(s)
	default:
		return fmt.Errorf("unsupported scan type for LanguageType: %T", src)
	}
	return nil
}

type NullLanguageType struct {
	LanguageType LanguageType
	Valid        bool // Valid is true if LanguageType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullLanguageType) Scan(value interface{}) error {
	if value == nil {
		ns.LanguageType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.LanguageType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullLanguageType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.LanguageType), nil
}

// Stores programming language definitions and metadata
type Language struct {
	ID int32
	// Primary name of the language
	Name string
	// Optional field. Only necessary as a replacement for the sample directory name if the language name is not a valid filename under the Windows filesystem (e.g., if it contains an asterisk)
	FsName pgtype.Text
	// Category of the language: data, programming, markup, prose, or null
	Type NullLanguageType
	// An array of additional aliases (implicitly includes name.downcase)
	Aliases []string
	// A String name of the Ace Mode used for highlighting whenever a file is edited. This must match one of the filenames in https://gh.io/acemodes. Use "text" if a mode does not exist
	AceMode pgtype.Text
	// A String name of the CodeMirror Mode used for highlighting whenever a file is edited. This must match a mode from https://git.io/vi9Fx
	CodemirrorMode pgtype.Text
	// A String name of the file mime type used for highlighting whenever a file is edited. This should match the `mime` associated with the mode from https://git.io/f4SoQ
	CodemirrorMimeType pgtype.Text
	// Boolean value to enable line wrapping (default: false)
	Wrap pgtype.Bool
	// An array of associated extensions (the first one is considered the primary extension, the others should be listed alphabetically)
	Extensions []string
	// An array of filenames commonly associated with the language
	Filenames []string
	// An array of associated interpreters
	Interpreters []string
	// Integer used as a language-name-independent indexed field so that we can rename languages in Linguist without reindexing all the code on GitHub. Must not be changed for existing languages without the explicit permission of GitHub staff
	LanguageID int32
	// CSS hex color to represent the language. Only used if type is "programming" or "markup"
	Color pgtype.Text
	// The TextMate scope that represents this programming language. This should match one of the scopes listed in the grammars.yml file. Use "none" if there is no grammar for this language
	TmScope pgtype.Text
	// Name of the parent language. Languages in a group are counted in the statistics as the parent language
	Group pgtype.Text
}
